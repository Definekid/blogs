<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>面经</title>
    <link href="/2024/03/14/%E9%9D%A2%E7%BB%8F/"/>
    <url>/2024/03/14/%E9%9D%A2%E7%BB%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="03-14"><a href="#03-14" class="headerlink" title="03.14"></a>03.14</h1><h3 id="山东依智科技有限公司（1个月2500，没完成认为会扣钱，无实习培训）"><a href="#山东依智科技有限公司（1个月2500，没完成认为会扣钱，无实习培训）" class="headerlink" title="山东依智科技有限公司（1个月2500，没完成认为会扣钱，无实习培训）"></a>山东依智科技有限公司（1个月2500，没完成认为会扣钱，无实习培训）</h3><h4 id="如果让你从0实现一个vue路由的话，你有什么样的思路？"><a href="#如果让你从0实现一个vue路由的话，你有什么样的思路？" class="headerlink" title="如果让你从0实现一个vue路由的话，你有什么样的思路？"></a>如果让你从0实现一个vue路由的话，你有什么样的思路？</h4><h6 id="src-my-router-js"><a href="#src-my-router-js" class="headerlink" title="src&#x2F;my-router.js"></a>src&#x2F;my-router.js</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">HashHistory</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./hashHistory&quot;</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VueRouter</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">options</span>) &#123;<br><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span> = options<br><br>        <span class="hljs-comment">// 如果不传mode，默认为hash</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">mode</span> = options.<span class="hljs-property">mode</span> || <span class="hljs-string">&#x27;hash&#x27;</span><br><br>        <span class="hljs-comment">// 判断模式是哪种</span><br>        <span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">mode</span>) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;hash&#x27;</span>:<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">history</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashHistory</span>(<span class="hljs-variable language_">this</span>)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;history&#x27;</span>:<br>                <span class="hljs-comment">// this.history = new HTML5History(this, options.base)</span><br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;abstract&#x27;</span>:<br><br>        &#125;<br>    &#125;<br>    <span class="hljs-title function_">init</span>(<span class="hljs-params">app</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">history</span>.<span class="hljs-title function_">listen</span>(<span class="hljs-function">(<span class="hljs-params">route</span>) =&gt;</span> app.<span class="hljs-property">_route</span> = route)<br><br>        <span class="hljs-comment">// 初始化时执行一次，保证刷新能渲染</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">history</span>.<span class="hljs-title function_">transitionTo</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">hash</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>))<br>    &#125;<br><br>    <span class="hljs-comment">// 根据hash变化获取对应的所有组件</span><br>    <span class="hljs-title function_">createMathcer</span>(<span class="hljs-params">location</span>) &#123;<br>        <span class="hljs-keyword">const</span> &#123; pathMap &#125; = <span class="hljs-title function_">createRouteMap</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">routes</span>)<br><br>        <span class="hljs-keyword">const</span> record = pathMap[location]<br>        <span class="hljs-keyword">const</span> local = &#123;<br>            <span class="hljs-attr">path</span>: location<br>        &#125;<br>        <span class="hljs-keyword">if</span> (record) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_">createRoute</span>(record, local)<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">createRoute</span>(<span class="hljs-literal">null</span>, local)<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">let</span> _Vue<br><span class="hljs-title class_">VueRouter</span>.<span class="hljs-property">install</span> = <span class="hljs-function">(<span class="hljs-params">Vue</span>) =&gt;</span> &#123;<br>    _Vue = <span class="hljs-title class_">Vue</span><br>    <span class="hljs-comment">// 使用Vue.mixin混入每一个组件</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(&#123;<br>        <span class="hljs-comment">// 在每一个组件的beforeCreate生命周期去执行</span><br>        <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">router</span>) &#123; <span class="hljs-comment">// 如果是根组件</span><br>                <span class="hljs-comment">// this 是 根组件本身</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_routerRoot</span> = <span class="hljs-variable language_">this</span><br><br>                <span class="hljs-comment">// this.$options.router就是挂在根组件上的VueRouter实例</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">router</span><br><br>                <span class="hljs-comment">// 执行VueRouter实例上的init方法，初始化</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">init</span>(<span class="hljs-variable language_">this</span>)<br><br>                <span class="hljs-comment">// 相当于存在_routerRoot上，并且调用Vue的defineReactive方法进行响应式处理</span><br>                <span class="hljs-title class_">Vue</span>.<span class="hljs-property">util</span>.<span class="hljs-title function_">defineReactive</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-string">&#x27;_route&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-property">history</span>.<span class="hljs-property">current</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 非根组件，也要把父组件的_routerRoot保存到自身身上</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_routerRoot</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$parent</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$parent</span>.<span class="hljs-property">_routerRoot</span><br>                <span class="hljs-comment">// 子组件也要挂上$router</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_routerRoot</span>.<span class="hljs-property">$router</span><br>            &#125;<br>        &#125;<br>    &#125;)<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>, <span class="hljs-string">&#x27;$route&#x27;</span>, &#123;<br>        <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_routerRoot</span>.<span class="hljs-property">_route</span><br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createRouteMap</span>(<span class="hljs-params">routes</span>) &#123;<br><br>    <span class="hljs-keyword">const</span> pathList = []<br>    <span class="hljs-keyword">const</span> pathMap = &#123;&#125;<br><br>    <span class="hljs-comment">// 对传进来的routes数组进行遍历处理</span><br>    routes.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">route</span> =&gt;</span> &#123;<br>        <span class="hljs-title function_">addRouteRecord</span>(route, pathList, pathMap)<br>    &#125;)<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(pathList)<br>    <span class="hljs-comment">// [&quot;/home&quot;, &quot;/home/child1&quot;, &quot;/home/child2&quot;, &quot;/hello&quot;, &quot;/hello/child1&quot;]</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(pathMap)<br>    <span class="hljs-comment">// &#123;</span><br>    <span class="hljs-comment">//     /hello: &#123;path: xxx, component: xxx, parent: xxx &#125;,</span><br>    <span class="hljs-comment">//     /hello/child1: &#123;path: xxx, component: xxx, parent: xxx &#125;,</span><br>    <span class="hljs-comment">//     /hello/child2: &#123;path: xxx, component: xxx, parent: xxx &#125;,</span><br>    <span class="hljs-comment">//     /home: &#123;path: xxx, component: xxx, parent: xxx &#125;,</span><br>    <span class="hljs-comment">//     /home/child1: &#123;path: xxx, component: xxx, parent: xxx &#125;</span><br>    <span class="hljs-comment">// &#125;</span><br><br><br>    <span class="hljs-comment">// 将pathList与pathMap返回</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        pathList,<br>        pathMap<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addRouteRecord</span>(<span class="hljs-params">route, pathList, pathMap, parent</span>) &#123;<br>    <span class="hljs-comment">// 拼接path</span><br>    <span class="hljs-keyword">const</span> path = parent ? <span class="hljs-string">`<span class="hljs-subst">$&#123;parent.path&#125;</span>/<span class="hljs-subst">$&#123;route.path&#125;</span>`</span> : route.<span class="hljs-property">path</span><br>    <span class="hljs-keyword">const</span> &#123; component, children = <span class="hljs-literal">null</span> &#125; = route<br>    <span class="hljs-keyword">const</span> record = &#123;<br>        path,<br>        component,<br>        parent<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!pathMap[path]) &#123;<br>        pathList.<span class="hljs-title function_">push</span>(path)<br>        pathMap[path] = record<br>    &#125;<br>    <span class="hljs-keyword">if</span> (children) &#123;<br>        <span class="hljs-comment">// 如果有children，则递归执行addRouteRecord</span><br>        children.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">child</span> =&gt;</span> <span class="hljs-title function_">addRouteRecord</span>(child, pathList, pathMap, record))<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createRoute</span>(<span class="hljs-params">record, location</span>) &#123;<br>    <span class="hljs-keyword">const</span> res = []<br>    <span class="hljs-keyword">if</span> (record) &#123;<br>        <span class="hljs-keyword">while</span> (record) &#123;<br>            res.<span class="hljs-title function_">unshift</span>(record)<br>            record = record.<span class="hljs-property">parent</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123;<br>        ...location,<br>        <span class="hljs-attr">matched</span>: res<br>    &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">VueRouter</span><br></code></pre></td></tr></table></figure><h6 id="src-hashHistory-js"><a href="#src-hashHistory-js" class="headerlink" title="src&#x2F;hashHistory.js"></a><strong>src&#x2F;hashHistory.js</strong></h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">HashHistory</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">router</span>) &#123;<br><br>        <span class="hljs-comment">// 将传进来的VueRouter实例保存</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">router</span> = router<br><br>        <span class="hljs-comment">// 一开始给current赋值初始值</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">current</span> = <span class="hljs-title function_">createRoute</span>(<span class="hljs-literal">null</span>, &#123;<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span><br>        &#125;)<br><br>        <span class="hljs-comment">// 如果url没有 # ，自动填充 /#/ </span><br>        <span class="hljs-title function_">ensureSlash</span>()<br><br>        <span class="hljs-comment">// 监听hash变化</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setupHashLister</span>()<br>    &#125;<br>    <span class="hljs-comment">// 监听hash的变化</span><br>    <span class="hljs-title function_">setupHashLister</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;hashchange&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-comment">// 传入当前url的hash</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">transitionTo</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">hash</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>))<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-comment">// 跳转路由时触发的函数</span><br>    <span class="hljs-title function_">transitionTo</span>(<span class="hljs-params">location</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(location)<br>        <br>        <span class="hljs-comment">// 找出所有对应组件</span><br>        <span class="hljs-keyword">let</span> route = <span class="hljs-variable language_">this</span>.<span class="hljs-property">router</span>.<span class="hljs-title function_">createMathcer</span>(location)<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(route)<br><br>        <span class="hljs-comment">// hash更新时给current赋真实值</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">current</span> = route<br>        <span class="hljs-comment">// 同时更新_route</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">cb</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">cb</span>(route)<br>    &#125;<br>    <span class="hljs-comment">// 监听回调</span><br>    <span class="hljs-title function_">listen</span>(<span class="hljs-params">cb</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">cb</span> = cb<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 如果浏览器url上没有#，则自动补充/#/</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">ensureSlash</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">hash</span>) &#123;<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">hash</span> = <span class="hljs-string">&#x27;/&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">createRoute</span>(<span class="hljs-params">record, location</span>) &#123;<br>    <span class="hljs-keyword">const</span> res = []<br>    <span class="hljs-keyword">if</span> (record) &#123;<br>        <span class="hljs-keyword">while</span> (record) &#123;<br>            res.<span class="hljs-title function_">unshift</span>(record)<br>            record = record.<span class="hljs-property">parent</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123;<br>        ...location,<br>        <span class="hljs-attr">matched</span>: res<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">HashHistory</span><br></code></pre></td></tr></table></figure><h6 id="src-views-js"><a href="#src-views-js" class="headerlink" title="src&#x2F;views.js"></a>src&#x2F;views.js</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> myView = &#123;<br>    <span class="hljs-attr">functional</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-title function_">render</span>(<span class="hljs-params">h, &#123; parent, data &#125;</span>) &#123;<br>        <span class="hljs-keyword">const</span> &#123; matched &#125; = parent.<span class="hljs-property">$route</span><br><br>        data.<span class="hljs-property">routerView</span> = <span class="hljs-literal">true</span> <span class="hljs-comment">// 标识此组件为router-view</span><br>        <span class="hljs-keyword">let</span> depth = <span class="hljs-number">0</span> <span class="hljs-comment">// 深度索引</span><br><br>        <span class="hljs-keyword">while</span>(parent) &#123;<br>            <span class="hljs-comment">// 如果有父组件且父组件为router-view 说明索引需要加1</span><br>            <span class="hljs-keyword">if</span> (parent.<span class="hljs-property">$vnode</span> &amp;&amp; parent.<span class="hljs-property">$vnode</span>.<span class="hljs-property">data</span>.<span class="hljs-property">routerView</span>) &#123;<br>                depth++<br>            &#125;<br>            parent = parent.<span class="hljs-property">$parent</span><br>        &#125;<br>        <span class="hljs-keyword">const</span> record = matched[depth]<br><br>        <span class="hljs-keyword">if</span> (!record) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>()<br>        &#125;<br><br>        <span class="hljs-keyword">const</span> component = record.<span class="hljs-property">component</span><br><br>        <span class="hljs-comment">// 使用render的h函数进行渲染组件</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(component, data)<br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> myView<br></code></pre></td></tr></table></figure><h6 id="src-link-js"><a href="#src-link-js" class="headerlink" title="src&#x2F;link.js"></a>src&#x2F;link.js</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> myLink = &#123;<br>    <span class="hljs-attr">props</span>: &#123;<br>        <span class="hljs-attr">to</span>: &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>        &#125;,<br>    &#125;,<br>    <span class="hljs-comment">// 渲染</span><br>    <span class="hljs-title function_">render</span>(<span class="hljs-params">h</span>) &#123;<br><br>        <span class="hljs-comment">// 使用render的h函数渲染</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(<br>            <span class="hljs-comment">// 标签名</span><br>            <span class="hljs-string">&#x27;a&#x27;</span>,<br>            <span class="hljs-comment">// 标签属性</span><br>            &#123;<br>                <span class="hljs-attr">domProps</span>: &#123;<br>                    <span class="hljs-attr">href</span>: <span class="hljs-string">&#x27;#&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">to</span>,<br>                &#125;,<br>            &#125;,<br>            <span class="hljs-comment">// 插槽内容</span><br>            [<span class="hljs-variable language_">this</span>.<span class="hljs-property">$slots</span>.<span class="hljs-property">default</span>]<br>        )<br>    &#125;,<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> myLink<br></code></pre></td></tr></table></figure><h4 id="阐述一下你对闭包的理解，闭包有什么样的优缺点？包括它的一些用途什么的？"><a href="#阐述一下你对闭包的理解，闭包有什么样的优缺点？包括它的一些用途什么的？" class="headerlink" title="阐述一下你对闭包的理解，闭包有什么样的优缺点？包括它的一些用途什么的？"></a>阐述一下你对闭包的理解，闭包有什么样的优缺点？包括它的一些用途什么的？</h4><h6 id="理解："><a href="#理解：" class="headerlink" title="理解："></a>理解：</h6><p><strong>闭包让你可以在一个内层函数中访问到其外层函数的作用域，内部函数存在对外部函数局部变量的引用就会导致闭包</strong></p><h6 id="优缺点："><a href="#优缺点：" class="headerlink" title="优缺点："></a>优缺点：</h6><p>优点：</p><ol><li>保护函数内的变量安全 ，实现封装，防止变量流入其他环境发生命名冲突</li><li>避免全局变量的污染</li><li>在内存中维持一个变量，可以做缓存</li><li>匿名自执行函数可以减少内存消耗</li></ol><p>缺点：</p><table><thead><tr><th>缺点</th><th>解决方案</th></tr></thead><tbody><tr><td>使用闭包会包含其他函数的作用域，会比其他函数占据更多的内存空间，不会再调用结束之后被垃圾回收机制（GC机制）回收，过度使用闭包会占用内存，造成<strong>内存泄漏</strong></td><td>在退出函数之前，将不需要的局部变量赋值为null</td></tr><tr><td>闭包会在父函数外部改变父函数内部变量的值</td><td>不要随便改变父函数内部变量的值</td></tr><tr><td>由于闭包涉及跨域访问，所以会导致<strong>性能损失</strong></td><td></td></tr></tbody></table><h6 id="用途："><a href="#用途：" class="headerlink" title="用途："></a>用途：</h6><ol><li>return 一个内部函数，读取内部函数的变量</li><li>函数作为参数</li><li>自执行函数</li><li>循环赋值</li><li>使用回调函数就是在使用闭包</li><li>将外部函数创建的变量值始终保持在内存中</li><li>封装对象的私有对象和私有方法</li></ol><h6 id="闭包例子"><a href="#闭包例子" class="headerlink" title="闭包例子"></a>闭包例子</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>; i++)&#123;<br>    (<span class="hljs-keyword">function</span>(<span class="hljs-params">j</span>)&#123;<br>        <span class="hljs-built_in">setTimeout</span>(data[j] = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(j);<br>        &#125;,<span class="hljs-number">0</span>)<br>    &#125;)(i)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="说一说你对vue响应式的理解，响应式是怎么样实现的？有什么优缺点？"><a href="#说一说你对vue响应式的理解，响应式是怎么样实现的？有什么优缺点？" class="headerlink" title="说一说你对vue响应式的理解，响应式是怎么样实现的？有什么优缺点？"></a>说一说你对vue响应式的理解，响应式是怎么样实现的？有什么优缺点？</h4><p>理解：<a href="https://juejin.cn/post/6844903882208837640"><strong>Vue能够实现数据和视图的自动更新</strong></a></p><p>实现：<a href="https://blog.csdn.net/Pentoncos/article/details/104782467">Vue实现响应式的核心方法是<strong>使用Object.defineProperty对数据进行劫持，给数据添加getter和setter属性，从而实现数据变化时通知视图更新</strong></a></p><p>优缺点：</p><p>优点：</p><ol><li>代码简洁</li><li>自动更新</li><li>高效性能</li></ol><p>缺点：</p><ol><li>新增属性的响应问题    Vue.set()</li><li>数组变动的响应问题    使用数组变异方法：Vue提供了一些数组变异方法（例如push、pop、shift、unshift、splice、sort和reverse）  | |     Vue.set()</li><li>对象属性的删除问题    Vue.delete()</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>面试大典</title>
    <link href="/2024/03/14/%E9%9D%A2%E8%AF%95%E5%A4%A7%E5%85%B8/"/>
    <url>/2024/03/14/%E9%9D%A2%E8%AF%95%E5%A4%A7%E5%85%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="unshift-首部添加"><a href="#unshift-首部添加" class="headerlink" title="unshift 首部添加"></a>unshift 首部添加</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">myUnshift</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">const</span> len = <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=len-<span class="hljs-number">1</span>; i&gt;=<span class="hljs-number">0</span>; i--)&#123;<br>        <span class="hljs-keyword">const</span> element = <span class="hljs-variable language_">arguments</span>[i]<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,element)<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span><br>&#125;<br><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-title function_">myUnshift</span>(<span class="hljs-number">3</span>,<span class="hljs-number">2</span>), arr)<br></code></pre></td></tr></table></figure><h1 id="unique-数组去重"><a href="#unique-数组去重" class="headerlink" title="unique 数组去重"></a>unique 数组去重</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">myUnique</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <br>    <span class="hljs-comment">// 方法一：数组和对象无法去重</span><br>    <span class="hljs-comment">// return Array.from(new Set(this));   </span><br>  <br>    <span class="hljs-comment">// 方法二：数组和对象无法去重</span><br>    <span class="hljs-comment">/* </span><br><span class="hljs-comment">    let arr = []</span><br><span class="hljs-comment">    for(let i=0; i&lt;this.length; i++)&#123;</span><br><span class="hljs-comment">        if(!arr.includes(this[i]))&#123;</span><br><span class="hljs-comment">            arr.push(this[i])</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">    return arr</span><br><span class="hljs-comment">    */</span><br>    <br>    <span class="hljs-comment">// 方法三：  数组和对象无法去重，且会把NaN给弄没了</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">v,idx</span>)=&gt;</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">indexOf</span>(v,<span class="hljs-number">0</span>)===idx;<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">let</span> arr = [<br>    &#123;&#125;,<br>    &#123;&#125;,<br>    <span class="hljs-number">1</span>,<br>    <span class="hljs-number">1</span>,<br>    <span class="hljs-string">&#x27;2&#x27;</span>,<br>    <span class="hljs-string">&#x27;2&#x27;</span>,<br>    <span class="hljs-literal">undefined</span>,<br>    <span class="hljs-literal">null</span>,<br>    <span class="hljs-literal">null</span>,<br>    <span class="hljs-literal">undefined</span>,<br>    <span class="hljs-title class_">NaN</span>,<br>    <span class="hljs-title class_">NaN</span>,<br>    [<span class="hljs-number">3</span>],<br>    [<span class="hljs-number">3</span>],<br>    [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr.<span class="hljs-title function_">myUnique</span>())<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序API</title>
    <link href="/2023/09/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8FAPI/"/>
    <url>/2023/09/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8FAPI/</url>
    
    <content type="html"><![CDATA[<h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs wx">//选择文件<br>chooseImage:function()&#123;<br>var that = this<br>wx.chooseImage(&#123;<br>    count:1, //默认是9<br>        sizeType:[&#x27;origin&#x27;,&#x27;compressed&#x27;], //可以指定原图还是压缩图，默认二者都有<br>        sourceType:[&#x27;album&#x27;,&#x27;camera&#x27;], //可以指定来源是相册还是相机，默认二者都有<br>success:function(res)&#123;<br>        //返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片<br>            let src = res.tempFilePaths[0]<br>            that.setData(&#123;src:src&#125;)<br>        &#125;<br>    &#125;)<br>&#125;<br><br>//上传文件<br>uploadFile:function()&#123;<br>var that = this<br>    //获取图片路径地址<br>    let src = this.data.src<br>    //尚未选择图片<br>    if(src==&#x27;&#x27;)&#123;<br>    wx.showToast(&#123;<br>        title:&#x27;请先选择文件！&#x27;<br>            icon:&#x27;none&#x27;<br>        &#125;)<br>    &#125;<br>    // 准备上传文件<br>    else&#123;<br>    //发起文件上传请求<br>        var uploadTask = wx.uploadFile(&#123;<br>        url:&#x27;http://localhost/miniDemo/upload.php&#x27; //可以替换为自己的服务器地址<br>            filePath:src,<br>            name:&#x27;file&#x27;,<br>            success:function(res)&#123;<br>            console.log(res)<br>                wx.showToast(&#123;this:res.data&#125;)<br>            &#125;<br>        &#125;)<br>    &#125;<br>    //监听文件上传进度变化事件<br>    upload.onProgressUpdate(res) =&gt; &#123;<br>    console.log(&#x27;上传进度&#x27;,res.progress)<br>        console.log(&#x27;已经上传的数据长度&#x27;,res.totalBytesSent)<br>        console.log(&#x27;预期需要上传的数据总长度&#x27;,res.totalBytesExpedtedToSend)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>js加分号情况</title>
    <link href="/2023/09/25/js%E5%8A%A0%E5%88%86%E5%8F%B7%E6%83%85%E5%86%B5/"/>
    <url>/2023/09/25/js%E5%8A%A0%E5%88%86%E5%8F%B7%E6%83%85%E5%86%B5/</url>
    
    <content type="html"><![CDATA[<h4 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;)();<br><span class="hljs-comment">// 或者</span><br>;(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;)()<br></code></pre></td></tr></table></figure><h4 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">;[b,a]=[a,b]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS进阶</title>
    <link href="/2023/09/24/%E9%97%AD%E5%8C%85/"/>
    <url>/2023/09/24/%E9%97%AD%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h4><p>内层函数 + 外层函数的变量常见闭包形式：外部使用内部函数的变量</p><p>常见闭包形式：外部使用内部函数的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">outer</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">let</span> a = <span class="hljs-number">10</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)<br>    &#125;<br>    <span class="hljs-keyword">return</span> fn<br>&#125;<br><span class="hljs-comment">// outer() === fn === function fn()&#123;&#125;</span><br><span class="hljs-keyword">const</span> fun = <span class="hljs-title function_">outer</span>()   <span class="hljs-comment">//闭包</span><br><span class="hljs-title function_">fun</span>()  <span class="hljs-comment">// 10</span><br></code></pre></td></tr></table></figure><p>闭包的作用：封闭数据，提供操作，外部也可以访问函数内部的变量</p><p>闭包应用：实现数据的私有</p><blockquote><p>统计变量调用的次数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 不使用闭包时，全局变量容易被修改</span><br><span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>)&#123;<br>i++<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`函数被调用了<span class="hljs-subst">$&#123;i&#125;</span>次`</span>)<br> &#125;   <br><span class="hljs-comment">// 闭包使用</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">count</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>)&#123;<br>    i++<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`函数被调用了<span class="hljs-subst">$&#123;i&#125;</span>次`</span>)<br>    &#125;<br>    <span class="hljs-keyword">return</span> fn<br>&#125;<br><span class="hljs-keyword">const</span> fun = <span class="hljs-title function_">count</span>()<br><br></code></pre></td></tr></table></figure><p>闭包风险：可能会出现<strong>内存泄漏</strong></p><h4 id="变量和函数提升"><a href="#变量和函数提升" class="headerlink" title="变量和函数提升"></a>变量和函数提升</h4><h5 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h5><p>允许在变量声明之前即被访问（仅存于var声明变量），提升到当前作用域前面，只提升声明，不提升赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num+<span class="hljs-string">&#x27;件&#x27;</span>)  <span class="hljs-comment">//undefined</span><br><span class="hljs-keyword">var</span> num = <span class="hljs-number">10</span> <br></code></pre></td></tr></table></figure><h5 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h5><p>会把所有函数声明提升到当前作用域的最前面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 调用函数</span><br><span class="hljs-title function_">fn</span>()  <span class="hljs-comment">// 打印：函数提升</span><br><span class="hljs-comment">// 声明函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;函数提升&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment">// 函数表达式必须先声明再调用，不存在函数提升</span><br><span class="hljs-title function_">fun</span>()  <span class="hljs-comment">// 错误</span><br><span class="hljs-keyword">var</span> fun = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;函数表达式&#x27;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h4><blockquote><p>开发时，提倡用剩余参数 …</p></blockquote><h5 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h5><p><strong>arguments</strong> 是函数内部内置的伪数组变量，包含调用函数时传入的所有实参</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSum</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">let</span> sum =<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>;i++)&#123;<br>    sum += <span class="hljs-variable language_">arguments</span>[i]<br>&#125;<br>    <span class="hljs-keyword">return</span> sum<br>&#125;<br><span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">52</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>)<br></code></pre></td></tr></table></figure><h5 id="函数参数-1"><a href="#函数参数-1" class="headerlink" title="函数参数"></a>函数参数</h5><p>剩余参数允许我们将不定长数组作为参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 要求至少有两个参数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSum</span>(<span class="hljs-params">a, b,...arrName</span>)&#123;<br><span class="hljs-keyword">let</span> sum =<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>; i&lt;arrName.<span class="hljs-property">length</span>;i++)&#123;<br>    sum += arrName[i]<br>&#125;<br>    <span class="hljs-keyword">return</span> sum<br>&#125;<br><span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">52</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>)<br></code></pre></td></tr></table></figure><ul><li>…是语法符号，置于最末函数形参之前，用于获取多余的实参</li><li>借助…获取的剩余实参，是个<code>真数组</code>(与动态参数最大区别)</li></ul><h4 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h4><p>展开运算符(…),将一个数组进行展开,不会修改数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(...arr) <span class="hljs-comment">//很少用</span><br></code></pre></td></tr></table></figure><p>常见使用方法：</p><ul><li>求数组最大值(最小值)</li><li>合并数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 求最大值</span><br><span class="hljs-comment">// ...arr === 1,2,4,5,2</span><br><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(...arr))<br><span class="hljs-comment">//合并数组</span><br><span class="hljs-keyword">const</span> arr2 =[<span class="hljs-number">7</span>,<span class="hljs-number">5</span>]<br><span class="hljs-keyword">const</span> arr3 = [...arr,...arr2]<br></code></pre></td></tr></table></figure><h4 id="箭头函数（重要）"><a href="#箭头函数（重要）" class="headerlink" title="箭头函数（重要）"></a>箭头函数（重要）</h4><p>目的：更简短的函数写法并不绑定this</p><p>使用场景：本来需要匿名函数的地方</p><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">const</span> <span class="hljs-title function_">fn2</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">123</span>);<br>&#125;<br><span class="hljs-title function_">fn2</span>()  <span class="hljs-comment">//123</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn3</span> = (<span class="hljs-params">x, y</span>) =&gt; &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x + y);<br>&#125;<br><span class="hljs-title function_">fn3</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)  <span class="hljs-comment">// 3</span><br><br><span class="hljs-comment">//只有一个形参的时候可以省略小括号</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn4</span> = x =&gt; &#123;   <br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x);  <br>&#125;<br><span class="hljs-title function_">fn4</span>(<span class="hljs-number">1</span>)  <span class="hljs-comment">// 1</span><br><br><span class="hljs-comment">//只有一行代码的时候可以省略大括号</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn5</span> = x =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x);  <br><span class="hljs-title function_">fn5</span>(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br><br><span class="hljs-comment">// 默认返回值是那一行代码</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn6</span> = x =&gt; x + x<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">fn6</span>(<span class="hljs-number">4</span>))  <span class="hljs-comment">// 8</span><br><br><span class="hljs-comment">// 箭头函数返回一个对象 + 解构 原(&#123;uname:uname&#125;)</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn7</span> = (<span class="hljs-params">uname</span>) =&gt; (&#123; uname &#125;)<br><span class="hljs-title function_">fn</span>(<span class="hljs-string">&#x27;刘德华&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h5><p>箭头函数没有arguments动态参数<br>但是剩余函数…args有</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 利用箭头函数求和</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getSum</span> = (<span class="hljs-params">...arr</span>) =&gt; &#123;<br><span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>sum += arr[i]<br>    &#125;<br><span class="hljs-keyword">return</span> sum<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>));<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">getSum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>));<br></code></pre></td></tr></table></figure><h5 id="箭头函数this"><a href="#箭头函数this" class="headerlink" title="箭头函数this"></a>箭头函数this</h5><p>箭头函数不会创建自己的this,只会从自己作用域的上一层沿用this (普通函数会有this)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fn</span> = (<span class="hljs-params"></span>)=&gt;&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>) <span class="hljs-comment">// window</span><br>&#125;<br><span class="hljs-title function_">fn</span>()<br><br><span class="hljs-comment">// 对象方法箭头函数this</span><br><span class="hljs-keyword">const</span> obj = &#123;<br><span class="hljs-attr">uname</span>:<span class="hljs-string">&#x27;joy&#x27;</span>,<br><span class="hljs-attr">sayHi</span>:<span class="hljs-function">()=&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)  <span class="hljs-comment">// window</span><br>&#125;<br>&#125;<br>obj.<span class="hljs-title function_">sayHi</span>()<br><br><span class="hljs-keyword">const</span> obj2 = &#123;<br><span class="hljs-attr">uname</span>:<span class="hljs-string">&#x27;joy&#x27;</span>,<br><span class="hljs-attr">sayHi</span>:<span class="hljs-function">()=&gt;</span>&#123;<br><span class="hljs-keyword">let</span> i=<span class="hljs-number">10</span><br>        <span class="hljs-keyword">const</span> <span class="hljs-title function_">count</span> = (<span class="hljs-params"></span>)=&gt;&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)  <span class="hljs-comment">// obj</span><br>        &#125;<br>        <span class="hljs-title function_">count</span>()<br>&#125;<br>&#125;<br>obj2.<span class="hljs-title function_">sayHi</span>()<br></code></pre></td></tr></table></figure><p>事件回调函数使用箭头函数时，this为全局的window,因此DOM事件回调函数为了简便，还是不太推荐使用箭头函数</p><h4 id="解构赋值-重要"><a href="#解构赋值-重要" class="headerlink" title="解构赋值(重要)"></a>解构赋值(重要)</h4><h5 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h5><p>将数组单元值快速批量赋值给一系列变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br><span class="hljs-keyword">const</span> [a,b,c] = arr<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)  <span class="hljs-comment">// 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b)  <span class="hljs-comment">// 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c)  <span class="hljs-comment">// 3</span><br></code></pre></td></tr></table></figure><blockquote><p>典型用法：两个变量交换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a=<span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> b=<span class="hljs-number">3</span>;   <span class="hljs-comment">//此处必须加分号；</span><br>[b,a] = [a,b]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a) <span class="hljs-comment">//3</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b) <span class="hljs-comment">//1</span><br></code></pre></td></tr></table></figure><p>案例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> pc = [<span class="hljs-string">&#x27;海尔&#x27;</span>, <span class="hljs-string">&#x27;联想&#x27;</span>, <span class="hljs-string">&#x27;小米&#x27;</span>]<br><span class="hljs-keyword">const</span> [hr, lx, xm] = pc<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(hr, lx, xm);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getValue</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-keyword">return</span> [<span class="hljs-number">44</span>, <span class="hljs-number">24</span>]<br>&#125;<br><span class="hljs-keyword">const</span> [max, min] = <span class="hljs-title function_">getValue</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(max, min);<br></code></pre></td></tr></table></figure><p>变量多，值少</p><p>–&gt; 多余的变量为undefined </p><p>–&gt; 为了防止undefined，可以使用默认值</p><p>变量少，值多 </p><p>–&gt; 多余的值用剩余参数获取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> [d=<span class="hljs-number">1</span>,e=<span class="hljs-number">0</span>] = [<span class="hljs-number">2</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d,e) <span class="hljs-comment">// 2 0</span><br><br><span class="hljs-keyword">const</span> [a,b,...c] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a) <span class="hljs-comment">// 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b) <span class="hljs-comment">// 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c) <span class="hljs-comment">// [3,4]</span><br><br><span class="hljs-keyword">const</span> [a,b,,c] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a) <span class="hljs-comment">// 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b) <span class="hljs-comment">// 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c) <span class="hljs-comment">// 4</span><br></code></pre></td></tr></table></figure><p>支持多维数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 支持多维数组  常规 - 解构</span><br><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">0</span>]); <span class="hljs-comment">// 1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">1</span>]); <span class="hljs-comment">// 2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>]); <span class="hljs-comment">// 3</span><br><br><span class="hljs-keyword">const</span> [a, b, c] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a); <span class="hljs-comment">//1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b); <span class="hljs-comment">//2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c); <span class="hljs-comment">//[4,5]</span><br><br><span class="hljs-keyword">const</span> [a1, b1, [c1,d1]] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a1); <span class="hljs-comment">//1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b1); <span class="hljs-comment">//2</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c1); <span class="hljs-comment">//4</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(d1); <span class="hljs-comment">//5</span><br></code></pre></td></tr></table></figure><h5 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h5><p>语法</p><ul><li>赋值运算符</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; uname, age &#125; = &#123;<br>   <span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;define&#x27;</span>,<br>   <span class="hljs-attr">age</span>: <span class="hljs-number">18</span><br>&#125;<br><br> <span class="hljs-comment">// 解构对象改名</span><br><span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">uname</span>:username, <span class="hljs-attr">age</span>:newage &#125; = &#123;<br><span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;define&#x27;</span>,<br><span class="hljs-attr">age</span>: <span class="hljs-number">18</span><br>&#125;<br><br><span class="hljs-comment">// 解构数组对象</span><br><span class="hljs-keyword">const</span> pig = [<br>&#123;<br><span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br><span class="hljs-attr">uid</span>: <span class="hljs-string">&#x27;1&#x27;</span><br>&#125;<br>]<br><br><span class="hljs-comment">//多级对象解构</span><br><span class="hljs-keyword">const</span> pig2 = &#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;乔治&#x27;</span>,<br>    <span class="hljs-attr">family</span>:&#123;<br>    <span class="hljs-attr">mother</span>:<span class="hljs-string">&#x27;猪妈妈&#x27;</span>,<br>        <span class="hljs-attr">father</span>:<span class="hljs-string">&#x27;猪爸爸&#x27;</span>,<br>        <span class="hljs-attr">sister</span>:<span class="hljs-string">&#x27;佩奇&#x27;</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">const</span> &#123;name,<span class="hljs-attr">family</span>:&#123;mother,father,sister&#125;&#125; = pig2<br><br><span class="hljs-comment">// 数组多级对象</span><br><span class="hljs-keyword">const</span> pig3 = [<br>&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;乔治&#x27;</span>,<br>    <span class="hljs-attr">family</span>:&#123;<br>    <span class="hljs-attr">mother</span>:<span class="hljs-string">&#x27;猪妈妈&#x27;</span>,<br>        <span class="hljs-attr">father</span>:<span class="hljs-string">&#x27;猪爸爸&#x27;</span>,<br>        <span class="hljs-attr">sister</span>:<span class="hljs-string">&#x27;佩奇&#x27;</span><br>    &#125;<br>&#125;]<br><span class="hljs-keyword">const</span> [&#123;name,<span class="hljs-attr">family</span>:&#123;mother,father,sister&#125;&#125;] = pig3<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>垃圾回收机制（GC）</title>
    <link href="/2023/09/24/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/"/>
    <url>/2023/09/24/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<p>js中内存的分配和回收都是自动完成的，内存在不使用的时候会被垃圾回收期自动回收</p><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><ul><li>内存分配（声明时）</li><li>内存使用</li><li>内存回收</li></ul><p>一般全局变量不会回收，关闭页面时回收<br>局部变量的值不用时，就会自动回收</p><h4 id="栈堆空间分配区别"><a href="#栈堆空间分配区别" class="headerlink" title="栈堆空间分配区别"></a>栈堆空间分配区别</h4><ul><li>堆：操作系统自动分配释放</li><li>栈：由程序员分配释放或垃圾回收机制回收</li></ul><h4 id="浏览器垃圾回收算法"><a href="#浏览器垃圾回收算法" class="headerlink" title="浏览器垃圾回收算法"></a>浏览器垃圾回收算法</h4><h5 id="引用计数法"><a href="#引用计数法" class="headerlink" title="引用计数法"></a>引用计数法</h5><p>内存不再使用，看一个对象是否有指向它的引用，没有引用了就回收</p><p>算法</p><ul><li>跟踪记录被引用的次数</li><li>如果被引用了一次，那么就记录次数1，多次引用会累加++</li><li>如果减少一个引用就减1 –</li><li>如果引用次数是0，则释放内存</li></ul><h5 id="标记清除法"><a href="#标记清除法" class="headerlink" title="标记清除法"></a>标记清除法</h5><p>现代浏览器大多使用标记清除法</p><p>算法</p><ul><li>标记清除法将“不再使用的对象”定义为“无法达到的对象”</li><li>就是从根部（在JS中就是全局变量）出发定时扫描内存中的对象。凡是能从根部到达的对象，都是还需要使用的</li><li>那些无法由根部出发触及到的对象被标记为不再使用，稍后进行回收</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>作用域</title>
    <link href="/2023/09/24/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <url>/2023/09/24/%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    
    <content type="html"><![CDATA[<h4 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h4><p>函数作用域(外部无法访问) 块作用域</p><p>let声明的变量会产生块级作用域，var不会产生块作用域</p><p>const声明的常量也会产生块作用域</p><p>不同代码块之间的变量无法相互访问<br>      推荐使用let或const</p><h4 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h4><p>script和js文件的最外层就是所谓的全局作用域</p><p>全局作用域中声明的变量，任何其他作用域都可以访问</p><p>为window对象动态添加的属性默认为全局的，不推荐</p><p>函数中未使用任何关键词声明的变量为全局作用域，不推荐</p><p>尽可能少的声明全局变量，防止全局变量被污染</p><h4 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h4><p>本质是 变量查找机制</p><ol><li>在变量被执行时，会优先查找当前函数作用域中变量</li><li>如果当前作用域查找不到会依次逐级查找父级作用域直到全局作用域</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地存储</title>
    <link href="/2023/09/24/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    <url>/2023/09/24/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本地存储只能存字符串</p></blockquote><h4 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h4><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><p>可以把数据永久存储在本地(用户电脑)，除非手动删除</p><h5 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h5><ul><li>可以多窗口（页面）共享 （同一浏览器可以共享）</li><li>以键值对的形式存储使用</li></ul><h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><h6 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(key,value)<br></code></pre></td></tr></table></figure><h6 id="查看方式："><a href="#查看方式：" class="headerlink" title="查看方式："></a>查看方式：</h6><p>edge - F12 - 应用 - 本地存储空间 - file:&#x2F;&#x2F;</p><h6 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(key)<br></code></pre></td></tr></table></figure><h6 id="删除本地数据。只删除名字"><a href="#删除本地数据。只删除名字" class="headerlink" title="删除本地数据。只删除名字"></a>删除本地数据。只删除名字</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">removeItem</span>(key)<br></code></pre></td></tr></table></figure><h6 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(key,value)<br></code></pre></td></tr></table></figure><h4 id="sessionStorage"><a href="#sessionStorage" class="headerlink" title="sessionStorage"></a>sessionStorage</h4><p>特性</p><ul><li>生命周期是关闭浏览器</li><li>在同一个窗口(页面)下数据可以共享</li><li>以键值对的形式存储使用</li><li>用法跟localStorage基本相同</li></ul><h4 id="存储复杂数据类型"><a href="#存储复杂数据类型" class="headerlink" title="存储复杂数据类型"></a>存储复杂数据类型</h4><h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>将复杂数据类型转换为JSON字符串再存储到本地</p><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p>对象 转为 JSON字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(复杂数据类型)<br></code></pre></td></tr></table></figure><p>JSON字符串 转为 对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;obj&#x27;</span>))<br></code></pre></td></tr></table></figure><h4 id="学生信息表案例"><a href="#学生信息表案例" class="headerlink" title="学生信息表案例"></a>学生信息表案例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>学生就业统计表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;off&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;uname&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;姓名&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;年龄&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;salary&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;salary&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;薪资&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gender&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;男&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;女&quot;</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;city&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;北京&quot;</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;上海&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;广州&quot;</span>&gt;</span>广州<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;曹县&quot;</span>&gt;</span>曹县<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-tianjia&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>添加<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>共有数据<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>条<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>薪资<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>就业城市<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>录入时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- &lt;tr&gt;</span><br><span class="hljs-comment">        &lt;td&gt;1&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;迪丽热巴&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;23&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;女&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;12000&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;北京&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;2099/9/9 08:08:08&lt;/td&gt;</span><br><span class="hljs-comment">        &lt;td&gt;</span><br><span class="hljs-comment">          &lt;a href=&quot;javascript:&quot;&gt;</span><br><span class="hljs-comment">            &lt;i class=&quot;iconfont icon-shanchu&quot;&gt;&lt;/i&gt;</span><br><span class="hljs-comment">            删除</span><br><span class="hljs-comment">          &lt;/a&gt;</span><br><span class="hljs-comment">        &lt;/td&gt;</span><br><span class="hljs-comment">      &lt;/tr&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 参考数据</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> initData = [</span><br><span class="language-javascript">      &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">stuId</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">uname</span>: <span class="hljs-string">&#x27;迪丽热巴&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">age</span>: <span class="hljs-number">22</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">salary</span>: <span class="hljs-string">&#x27;12000&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;女&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;北京&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">time</span>: <span class="hljs-string">&#x27;2099/9/9 08:08:08&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    ]</span><br><span class="language-javascript">    <span class="hljs-comment">// localStorage.setItem(&#x27;data&#x27;, JSON.stringify(initData))</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 1. 渲染业务</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 1.1 先读取本地存储的数据</span></span><br><span class="language-javascript">    <span class="hljs-comment">// (1). 本地存储有数据则记得转换为对象然后存储到变量里面，后期用于渲染页面</span></span><br><span class="language-javascript">    <span class="hljs-comment">// (2). 如果没有数据，则用 空数组来代替</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> arr = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>)) || []</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr)</span><br><span class="language-javascript">    <span class="hljs-comment">// 1.2 利用map和join方法来渲染页面</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> tbody = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;tbody&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-comment">// (1). 利用map遍历数组，返回对应tr的数组 返回新数组</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> trArr = arr.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">ele, index</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">          &lt;tr&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.uname&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.age&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.gender&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.salary&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.city&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;<span class="hljs-subst">$&#123;ele.time&#125;</span>&lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">              &lt;a href=&quot;javascript:&quot; data-id=&quot;<span class="hljs-subst">$&#123;index&#125;</span>&quot;&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;i class=&quot;iconfont icon-shanchu&quot;&gt;&lt;/i&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                删除</span></span><br><span class="hljs-string"><span class="language-javascript">              &lt;/a&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/td&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">          &lt;/tr&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">        `</span></span><br><span class="language-javascript">      &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(trArr)</span><br><span class="language-javascript">      <span class="hljs-comment">// (2). 把数组转换为字符串 join</span></span><br><span class="language-javascript">      <span class="hljs-comment">// (3). 把生成的字符串追加给tbody </span></span><br><span class="language-javascript">      tbody.<span class="hljs-property">innerHTML</span> = trArr.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="language-javascript">      <span class="hljs-comment">// 显示共计有几条数据</span></span><br><span class="language-javascript">      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.title span&#x27;</span>).<span class="hljs-property">innerHTML</span> = arr.<span class="hljs-property">length</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 2. 新增业务</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> info = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.info&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> uname = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.uname&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> age = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.age&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> salary = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.salary&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> gender = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.gender&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> city = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.city&#x27;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 2.1 form表单注册提交事件，阻止默认行为</span></span><br><span class="language-javascript">    info.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">      e.<span class="hljs-title function_">preventDefault</span>()</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.2 非空判断</span></span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (!uname.<span class="hljs-property">value</span> || !age.<span class="hljs-property">value</span> || !salary.<span class="hljs-property">value</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;输入内容不能为空&#x27;</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.3 给 arr 数组追加对象，里面存储 表单获取过来的数据</span></span><br><span class="language-javascript">      arr.<span class="hljs-title function_">push</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 处理 stuId：数组最后一条数据的stuId + 1      </span></span><br><span class="language-javascript">        <span class="hljs-attr">stuId</span>: arr.<span class="hljs-property">length</span> ? arr[arr.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>].<span class="hljs-property">stuId</span> + <span class="hljs-number">1</span> : <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">uname</span>: uname.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">age</span>: age.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">salary</span>: salary.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">gender</span>: gender.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">city</span>: city.<span class="hljs-property">value</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">time</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">toLocaleString</span>()</span><br><span class="language-javascript">      &#125;)</span><br><span class="language-javascript">      <span class="hljs-comment">// 2.4 渲染页面和重置表单（reset()方法）</span></span><br><span class="language-javascript">      <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>() <span class="hljs-comment">// 重置表单</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-comment">// 2.5 把数组重新存入本地存储里面，记得转换为JSON字符串存储</span></span><br><span class="language-javascript">      <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(arr))</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 3. 删除业务</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 3.1 采用事件委托形式，给 tbody 注册点击事件</span></span><br><span class="language-javascript">    tbody.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-comment">// 判断是否点击的是删除按钮  A 链接</span></span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (e.<span class="hljs-property">target</span>.<span class="hljs-property">tagName</span> === <span class="hljs-string">&#x27;A&#x27;</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// alert(11)</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 3.2 得到当前点击链接的索引号。渲染数据的时候，动态给a链接添加自定义属性例如 data-id=&quot;0&quot;</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">id</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 确认框 确认是否要真的删除</span></span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;您确定要删除这条数据吗？&#x27;</span>)) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.3 根据索引号，利用 splice 删除数组这条数据</span></span><br><span class="language-javascript">          arr.<span class="hljs-title function_">splice</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">id</span>, <span class="hljs-number">1</span>)</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.4 重新渲染页面 </span></span><br><span class="language-javascript">          <span class="hljs-title function_">render</span>()</span><br><span class="language-javascript">          <span class="hljs-comment">// 3.5 把最新 arr 数组存入本地存储</span></span><br><span class="language-javascript">          <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(arr))</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js执行机制</title>
    <link href="/2023/09/24/js%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6/"/>
    <url>/2023/09/24/js%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h4 id="引出（面试题）"><a href="#引出（面试题）" class="headerlink" title="引出（面试题）"></a>引出（面试题）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">1</span>)<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">2</span>)<br>&#125;,<span class="hljs-number">0</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">3</span>)<br><br><span class="hljs-comment">// 输出： 132</span><br></code></pre></td></tr></table></figure><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>javascript语言一大特点是单线程，同一时间只做一件事，为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript异步</p><h4 id="同步任务"><a href="#同步任务" class="headerlink" title="同步任务"></a>同步任务</h4><p>同步任务都是在主线程上执行的，形成一个执行栈</p><h4 id="异步任务"><a href="#异步任务" class="headerlink" title="异步任务"></a>异步任务</h4><p>js的异步都是通过回调函数实现的</p><p>一般有以下分类：</p><ol><li>普通事件，如click,resize…</li><li>资源加载，如load,error…</li><li>定时器，如setInterval,setTimeout…</li></ol><p>异步任务相关添加到任务队列（消息队列）</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>先执行执行线中的同步任务</li><li>异步任务放在任务队列中</li><li>一旦执行栈中的所有同步任务执行完毕，系统会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行</li></ol><p><img src="/%5Cimages%5Cpasted-2.png" alt="upload successful"></p>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>捕获和冒泡</title>
    <link href="/2023/09/23/%E6%8D%95%E8%8E%B7%E5%92%8C%E5%86%92%E6%B3%A1/"/>
    <url>/2023/09/23/%E6%8D%95%E8%8E%B7%E5%92%8C%E5%86%92%E6%B3%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h3><p>事件完整执行过程中的流动路径</p><h3 id="捕获"><a href="#捕获" class="headerlink" title="捕获"></a>捕获</h3><blockquote><p>从DOM的根元素开始去执行对应的事件（从外到里）</p></blockquote><p>eg. 爷爷-父亲-儿子</p><p>捕获需要些对应代码才能看到效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable constant_">DOM</span>.<span class="hljs-title function_">addEventListener</span>(事件类型，事件处理函数，是否使用捕获机制)   <br><span class="hljs-comment">// true即捕获（很少使用）</span><br></code></pre></td></tr></table></figure><p>若是用LO事件监听，则只有冒泡阶段，没有捕获</p><h3 id="冒泡"><a href="#冒泡" class="headerlink" title="冒泡"></a>冒泡</h3><blockquote><p>当一个元素触发事件后，会一次向上调用所有父级元素的<code>同名事件</code></p></blockquote><p>eg. 儿子-父亲-爷爷</p><p> 事件冒泡是默认存在的</p><p> L2事件监听第三个参数是false, 或者默认都是冒泡</p><h4 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h4><p>把事件限制在当前元素内，就需要阻止事件冒泡</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">事件对象<span class="hljs-string">.stopPropagation</span><span class="hljs-params">()</span><br></code></pre></td></tr></table></figure><p>此方法可以阻断事件流动传播，不光在冒泡阶段有效，捕获阶段也有效</p><h4 id="解绑事件"><a href="#解绑事件" class="headerlink" title="解绑事件"></a>解绑事件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">L0</span>: btn.<span class="hljs-property">onclick</span>=<span class="hljs-literal">null</span><br><span class="hljs-variable constant_">L02</span>： btn.<span class="hljs-title function_">removeEventListener</span>()<br><span class="hljs-comment">// 但匿名函数无法被解绑</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button&#x27;</span>)<br>btn.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;点击了&#x27;</span>)<br>btn.<span class="hljs-property">onclick</span> = <span class="hljs-literal">null</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;...&#x27;</span>)   <br>   btn.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,fn)<br>&#125;<br>btn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,fn)<br><br></code></pre></td></tr></table></figure><h3 id="两种注册事件的区别"><a href="#两种注册事件的区别" class="headerlink" title="两种注册事件的区别"></a>两种注册事件的区别</h3><p><img src="/%5Cimages%5Cpasted-0.png" alt="upload successful"></p><h3 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h3><p>利用事件流的特征解决开发需求的技巧</p><p>优点：减少注册次数，可以提高程序性能</p><p>原理：事件委托其实是利用事件冒泡的特点<br>    给<code>父元素</code>注册事件，当我们触发子元素的时候就会冒泡到父元素身上，从而触发父元素的事件</p><p>困难所在：找到对应子元素 （利用e.target获得点击事件）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>l1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>l2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>l3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">const</span> ul = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;ul&#x27;</span>)</span><br><span class="language-javascript">  ul.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;  </span><br><span class="language-javascript">  <span class="hljs-comment">//需求只要点击li</span></span><br><span class="language-javascript">  <span class="hljs-comment">// e.target包括所有子元素</span></span><br><span class="language-javascript">   <span class="hljs-keyword">if</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">tagName</span> === <span class="hljs-string">&#x27;LI&#x27;</span>)</span><br><span class="language-javascript">  &#123;</span><br><span class="language-javascript">  e.<span class="hljs-property">target</span>.<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;red&#x27;</span></span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="tab栏切换"><a href="#tab栏切换" class="headerlink" title="tab栏切换"></a>tab栏切换</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>tab栏切换<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    * &#123;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">590px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">340px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#e4e4e4</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">      <span class="hljs-attribute">justify-content</span>: space-between;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> <span class="hljs-selector-tag">h3</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">font-weight</span>: normal;</span><br><span class="language-css">      <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">list-style</span>: none;</span><br><span class="language-css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">      <span class="hljs-attribute">justify-content</span>: flex-end;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span>;</span><br><span class="language-css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="language-css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">2px</span> solid transparent;</span><br><span class="language-css">      <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-nav</span> <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.active</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#e1251b</span>;</span><br><span class="language-css">      <span class="hljs-attribute">color</span>: <span class="hljs-number">#e1251b</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-content</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">16px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-content</span> <span class="hljs-selector-class">.item</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.tab-content</span> <span class="hljs-selector-class">.item</span><span class="hljs-selector-class">.active</span> &#123;</span><br><span class="language-css">      <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-nav&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>每日特价<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>精选<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>美食<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>百货<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>个护<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>预告<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./images/tab00.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./images/tab01.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./images/tab02.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./images/tab03.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./images/tab04.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// const lis = document.querySelectorAll(&#x27;ul li&#x27;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">// const items = document.querySelectorAll(&#x27;.item&#x27;)</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// for (let index = 0; index &lt; lis.length; index++) &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   lis[index].addEventListener(&#x27;mouseenter&#x27;, function () &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     document.querySelector(&#x27;ul li .active&#x27;).classList.remove(&#x27;active&#x27;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     this.querySelector(&#x27;a&#x27;).classList.add(&#x27;active&#x27;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     document.querySelector(&#x27;.tab-content .active&#x27;).classList.remove(&#x27;active&#x27;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     items[index].classList.add(&#x27;active&#x27;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">//   &#125;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> ul = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;ul&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> tabContent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.tab-content&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> items = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.item&#x27;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">    ul.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (e.<span class="hljs-property">target</span>.<span class="hljs-property">tagName</span> === <span class="hljs-string">&#x27;A&#x27;</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.tab-nav .active&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;active&#x27;</span>)</span><br><span class="language-javascript">        e.<span class="hljs-property">target</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;active&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.tab-content .active&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;active&#x27;</span>)</span><br><span class="language-javascript">        items[+e.<span class="hljs-property">target</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">id</span>].<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;active&#x27;</span>)</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js模板函数</title>
    <link href="/2023/09/22/js%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0/"/>
    <url>/2023/09/22/js%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="取得随机数N-M"><a href="#取得随机数N-M" class="headerlink" title="取得随机数N~M"></a>取得随机数N~M</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getRandom</span>(<span class="hljs-params">N,M</span>)&#123;<br>   <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()*(M-N+<span class="hljs-number">1</span>))+N<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>模板实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo基础使用</title>
    <link href="/2023/09/22/hello-world/"/>
    <url>/2023/09/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="安装插件可视化操作"><a href="#安装插件可视化操作" class="headerlink" title="安装插件可视化操作"></a>安装插件可视化操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install --save hexo-admin<br>$ hexo s -d   <span class="hljs-comment">#启动服务</span><br></code></pre></td></tr></table></figure><p><code>注意: 访问可视化网址为https://localhost:4000/admin，原网址依旧可看到博客内容</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>使用教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DOM与BOM</title>
    <link href="/2023/09/22/webApi/"/>
    <url>/2023/09/22/webApi/</url>
    
    <content type="html"><![CDATA[<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><h5 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h5><p>文档对象模型<br>用来呈现以及与任意HTML或XML文档交互</p><p>文档树直观体现标签与标签之间的关系</p><p>DOM对象：浏览器根据html标签生成的js对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> div = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;div&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(div)  <span class="hljs-comment">//dir专门打印对象</span><br></code></pre></td></tr></table></figure><h6 id="获取元素注意要点"><a href="#获取元素注意要点" class="headerlink" title="获取元素注意要点"></a>获取元素注意要点</h6><p>querySelectorAll(‘css选择器’)得到的是伪数组，没有pop(),push()等数组方法，想要得到里面每一个对象就需要遍历(for)的方式获取</p><hr><h5 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h5><p>浏览器对象模型</p><p><img src="/%5Cimages%5Cpasted-1.png" alt="upload successful"></p>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>理论知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
